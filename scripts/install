#!/usr/bin/env node
'use strict';

const ArgParser = require('../app/argparser');
const run = require('../tools/run');

const args = new ArgParser(`
Reminder App installation script.
This script installs reminder-app, and also gives you and
option to start it on machine startup.
`);

args.add('--port', { type: 'number', alias: '-p',
  help: 'Specify port for reminder-app to start on' });
args.add('--startup', { type: 'boolean', alias: '-s',
  help: 'Makes reminder-app start on' });
args.add('--non-interactive', { type: 'boolean', dest: 'nonInteractive',
  help: 'Disables interactive prompts, mostly used in CI' });
args.parse();

// we install required dependencies first then required them
// the won't be installed at first
const requiredDeps = require('./lib/required-deps');
const runDepsInstall = requiredDeps.needToInstall();
if (runDepsInstall) {
  requiredDeps.runInstall();
}

const ora = require('ora');
const prepare = require('./prepare');
const installation = require('./lib/installation');

const spinner = new ora({
  spinner: 'dots5',
  text: 'Installing reminder-app'
});

spinner.start();
process.env.NODE_ENV = 'production';
process.env.PORT = process.env.PORT || 7000;

const { ignore } = installation;

// logic that installs reminder-app
async function install_reminder_app() {
  await installation.ensure_not_installed(spinner);

  const pm2Installed = await installation.isPm2Installed();
  if (pm2Installed) {
    await run('pm2 save', ignore);
  }

  await prepare(spinner, {
    runPm2Save: pm2Installed
  });

  await installation.prompt_for_port(args);

  spinner.text = 'Starting reminder-app using pm2';
  spinner.color = 'cyan';
  await run('npx pm2 start app --name reminder-app', ignore);
}

install_reminder_app()
  .then(() => spinner.succeed('Reminder App Installed Sucessfully!'))
  .then(installation.prompt_init_startup)
  .catch(err => installation.printError(err, spinner));
